{"version":3,"file":"main-DMnWZk84.js","sources":["../../../../frontend/src/service/taakService.js","../../../../frontend/src/view/takenlijst.js"],"sourcesContent":["\r\nfunction getTaken() {\r\n    return fetch(\"http://localhost:8080/restservices/taken\")\r\n        .then(response => {\r\n            return response.json().then(data => ({\r\n                status: response.status,\r\n                body: data\r\n            }));\r\n        })\r\n        .then(({ status, body }) => {\r\n            if (status === 200) {\r\n                console.log(body);\r\n                return body;\r\n            } else {\r\n                console.error(body.error);\r\n                return [];\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching tasks:\", error);\r\n            return [];\r\n        });\r\n}\r\n\r\nexport const taakService = {\r\n    getTaken\r\n};\r\n\r\n\r\n// Function to add a task\r\nfunction addTaken(taak) {\r\n    const url = \"http://localhost:8080/restservices/addTaak\";\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify(taak),\r\n    };\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding task:\", error);\r\n        });\r\n}\r\n\r\n// Function to update a task\r\nfunction updateTaak(taak) {\r\n    const url = `http://localhost:8080/restservices/update/${taak.naamTaak}`;\r\n    const options = {\r\n        method: \"PUT\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(taak),\r\n    };\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(result => {\r\n            console.log(result);\r\n            return result;\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error updating task:\", error);\r\n        });\r\n}\r\n\r\n\r\n// Function to delete a task\r\nfunction deleteTaak(naamTaak) {\r\n    const url = `http://localhost:8080/restservices/delete/${naamTaak}`;\r\n    const options = {\r\n        method: \"DELETE\",\r\n    };\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log(\"Task deleted\");\r\n            } else if (response.status === 404) {\r\n                console.log(\"Task not found\");\r\n            } else {\r\n                console.log(\"Something else happened\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error deleting task:\", error);\r\n        });\r\n}","import { taakService } from '../service/taakService.js';\r\nfunction showDialog() {\r\n\r\n}\r\nfunction renderAllTasks(taak) {\r\n    let temp = document.querySelector(\"#taak-template\");\r\n    let clon = temp.content.cloneNode(true);\r\n\r\n    let articleElement = clon.querySelector(\"#taakTitle\");\r\n    articleElement.addEventListener('click', showDialog);\r\n\r\n    let h2Element = clon.querySelector(\"h2\");\r\n    h2Element.textContent = taak.naamTaak;\r\n\r\n    let vervaltimeElement = clon.querySelector(\"time.vervaltijd\");\r\n    vervaltimeElement.setAttribute(\"datetime\", taak.vervalDatum);\r\n\r\n    let timeElement = clon.querySelector(\"time\");\r\n    timeElement.setAttribute(\"datetime\", taak.gemaaktOp);\r\n    const options = {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n    };\r\n    timeElement.textContent = new Intl.DateTimeFormat(undefined, options).format(new Date(taak.gemaaktOp));\r\n    let descriptionElement = clon.querySelector(\".description\");\r\n    descriptionElement.textContent = taak.omschrijving;\r\n    return clon;\r\n}\r\n\r\n// Function to load all tasks\r\nfunction render() {\r\n    let tasksElement = document.querySelector(\".to-do-container\");\r\n    taakService.getTaken()\r\n        .then(taken => {\r\n            tasksElement.innerHTML = \"\";\r\n            taken.forEach(taak => {\r\n                tasksElement.appendChild(renderAllTasks(taak));\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error getting all tasks:\", error);\r\n        });\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', render);\r\nrender();"],"names":["getTaken","response","data","status","body","error","taakService","showDialog","renderAllTasks","taak","clon","h2Element","timeElement","options","descriptionElement","render","tasksElement","taken"],"mappings":"ssBACA,SAASA,GAAW,CAChB,OAAO,MAAM,0CAA0C,EAClD,KAAKC,GACKA,EAAS,OAAO,KAAKC,IAAS,CACjC,OAAQD,EAAS,OACjB,KAAMC,CACT,EAAC,CACL,EACA,KAAK,CAAC,CAAE,OAAAC,EAAQ,KAAAC,KACTD,IAAW,KACX,QAAQ,IAAIC,CAAI,EACTA,IAEP,QAAQ,MAAMA,EAAK,KAAK,EACjB,GAEd,EACA,MAAMC,IACH,QAAQ,MAAM,wBAAyBA,CAAK,EACrC,GACV,CACT,CAEO,MAAMC,EAAc,CACvB,SAAAN,CACJ,ECzBA,SAASO,GAAa,CAEtB,CACA,SAASC,EAAeC,EAAM,CAE1B,IAAIC,EADO,SAAS,cAAc,gBAAgB,EAClC,QAAQ,UAAU,EAAI,EAEjBA,EAAK,cAAc,YAAY,EACrC,iBAAiB,QAASH,CAAU,EAEnD,IAAII,EAAYD,EAAK,cAAc,IAAI,EACvCC,EAAU,YAAcF,EAAK,SAELC,EAAK,cAAc,iBAAiB,EAC1C,aAAa,WAAYD,EAAK,WAAW,EAE3D,IAAIG,EAAcF,EAAK,cAAc,MAAM,EAC3CE,EAAY,aAAa,WAAYH,EAAK,SAAS,EACnD,MAAMI,EAAU,CACZ,KAAM,UACN,MAAO,OACP,IAAK,SACb,EACID,EAAY,YAAc,IAAI,KAAK,eAAe,OAAWC,CAAO,EAAE,OAAO,IAAI,KAAKJ,EAAK,SAAS,CAAC,EACrG,IAAIK,EAAqBJ,EAAK,cAAc,cAAc,EAC1D,OAAAI,EAAmB,YAAcL,EAAK,aAC/BC,CACX,CAGA,SAASK,GAAS,CACd,IAAIC,EAAe,SAAS,cAAc,kBAAkB,EAC5DV,EAAY,SAAU,EACjB,KAAKW,GAAS,CACXD,EAAa,UAAY,GACzBC,EAAM,QAAQR,GAAQ,CAClBO,EAAa,YAAYR,EAAeC,CAAI,CAAC,CAC7D,CAAa,CACb,CAAS,EACA,MAAMJ,GAAS,CACZ,QAAQ,MAAM,2BAA4BA,CAAK,CAC3D,CAAS,CACT,CAEA,SAAS,iBAAiB,mBAAoBU,CAAM,EACpDA,EAAQ"}